{
  "CVE-2024-3640": {
    "cvss": "-",
    "description": "An unquoted executable path exists in the Rockwell Automation\u00a0FactoryTalk\u00ae Remote Access\u2122 possibly resulting in remote code execution if exploited. While running the FTRA installer package, the executable path is not properly quoted, which could allow a threat actor to enter a malicious executable and run it as a System user. A threat actor needs admin privileges to exploit this vulnerability.",
    "published": "2024-05-16T16:15:10.477",
    "keywords": "remote,execution"
  },
  "CVE-2024-4603": {
    "url": "https://github.com/openssl/openssl/commit/da343d0605c826ef197aceedc67e8e04f065f740",
    "cvss": "-",
    "description": "Issue summary: Checking excessively long DSA keys or parameters may be very\nslow.\n\nImpact summary: Applications that use the functions EVP_PKEY_param_check()\nor EVP_PKEY_public_check() to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (`p` parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check()\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL pkey and pkeyparam command line applications\nwhen using the `-check` option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
    "published": "2024-05-16T16:15:10.643"
  },
  "CVE-2024-4609": {
    "cvss": "-",
    "description": "A vulnerability exists in the Rockwell Automation FactoryTalk\u00ae View SE Datalog function that could allow a threat actor to inject a malicious SQL statement if the SQL database has no authentication in place or if legitimate credentials were stolen. If exploited, the attack could result in information exposure, revealing sensitive information. Additionally, a threat actor could potentially modify and delete the data in a remote database. An attack would only affect the HMI design time, not runtime.",
    "published": "2024-05-16T16:15:10.750",
    "keywords": "remote,authentication,sensitive"
  },
  "CVE-2024-22476": {
    "cvss": 10.0,
    "description": "Improper input validation in some Intel(R) Neural Compressor software before version 2.5.0 may allow an unauthenticated user to potentially enable escalation of privilege via remote access.",
    "published": "2024-05-16T21:16:07.350",
    "keywords": "remote,unauthenticated"
  },
  "CVE-2024-3551": {
    "cvss": 9.8,
    "description": "The Penci Soledad Data Migrator plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.3.0 via the 'data' parameter. This makes it possible for unauthenticated attackers to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other \u201csafe\u201d file types can be uploaded and included. This is limited to just PHP files.",
    "published": "2024-05-17T03:15:08.463",
    "keywords": "execution,unauthenticated,sensitive,bypass"
  },
  "CVE-2024-35110": {
    "url": "https://github.com/yzmcms/yzmcms/issues/68",
    "cvss": "-",
    "description": "A reflected XSS vulnerability has been found in YzmCMS 7.1. The vulnerability exists in yzmphp/core/class/application.class.php: when logged-in users access a malicious link, their cookies can be captured by an attacker.",
    "published": "2024-05-17T08:15:06.073"
  },
  "CVE-2024-21746": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in Wpmet Wp Ultimate Review allows Functionality Bypass.This issue affects Wp Ultimate Review: from n/a through 2.3.2.",
    "published": "2024-05-17T09:15:20.363",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-22139": {
    "cvss": 3.7,
    "description": "Authentication Bypass by Spoofing vulnerability in Filipe Seabra WordPress Manuten\u00e7\u00e3o allows Functionality Bypass.This issue affects WordPress Manuten\u00e7\u00e3o: from n/a through 1.0.6.",
    "published": "2024-05-17T09:15:20.930",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-25595": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in WPMU DEV Defender Security allows Functionality Bypass.This issue affects Defender Security: from n/a through 4.4.1.",
    "published": "2024-05-17T09:15:25.920",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-25906": {
    "cvss": 4.3,
    "description": "Authentication Bypass by Spoofing vulnerability in WP Happy Coders Comments Like Dislike allows Functionality Bypass.This issue affects Comments Like Dislike: from n/a through 1.2.2.",
    "published": "2024-05-17T09:15:26.370",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-30479": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in LionScripts IP Blocker Lite allows Functionality Bypass.This issue affects IP Blocker Lite: from n/a through 11.1.1.",
    "published": "2024-05-17T09:15:28.283",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-30480": {
    "cvss": 3.7,
    "description": "Authentication Bypass by Spoofing vulnerability in Pippin Williamson CGC Maintenance Mode allows Functionality Bypass.This issue affects CGC Maintenance Mode: from n/a through 1.2.",
    "published": "2024-05-17T09:15:28.807",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-30522": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in Stefano Lissa & The Newsletter Team Newsletter allows Functionality Bypass.This issue affects Newsletter: from n/a through 8.2.0.",
    "published": "2024-05-17T09:15:29.813",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-32131": {
    "cvss": 5.3,
    "description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in W3 Eden Inc. Download Manager allows Functionality Bypass.This issue affects Download Manager: from n/a through 3.2.82.",
    "published": "2024-05-17T09:15:35.797",
    "keywords": "sensitive,bypass"
  },
  "CVE-2024-33917": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in webtechideas WTI Like Post allows Functionality Bypass.This issue affects WTI Like Post: from n/a through 1.4.6.",
    "published": "2024-05-17T09:15:43.250",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-22120": {
    "cvss": 9.1,
    "description": "Zabbix server can perform command execution for configured scripts. After command is executed, audit entry is added to \"Audit Log\". Due to \"clientip\" field is not sanitized, it is possible to injection SQL into \"clientip\" and exploit time based blind SQL injection.",
    "published": "2024-05-17T10:15:07.363",
    "keywords": "execution,command"
  },
  "CVE-2024-32708": {
    "cvss": 3.7,
    "description": "Authentication Bypass by Spoofing vulnerability in helderk Maintenance Mode allows Functionality Bypass.This issue affects Maintenance Mode: from n/a through 3.0.1.",
    "published": "2024-05-17T10:15:09.203",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-32786": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in WP Royal Royal Elementor Addons allows Functionality Bypass.This issue affects Royal Elementor Addons: from n/a through 1.3.93.",
    "published": "2024-05-17T10:15:10.387",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-32827": {
    "cvss": 5.3,
    "description": "Authentication Bypass by Spoofing vulnerability in RafflePress Giveaways and Contests allows Functionality Bypass.This issue affects Giveaways and Contests: from n/a through 1.12.7.",
    "published": "2024-05-17T10:15:11.540",
    "keywords": "authentication,bypass"
  },
  "CVE-2024-5044": {
    "cvss": 3.7,
    "description": "A vulnerability was found in Emlog Pro 2.3.4. It has been classified as problematic. This affects an unknown part of the component Cookie Handler. The manipulation of the argument AuthCookie leads to improper authentication. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The identifier VDB-264741 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way.",
    "published": "2024-05-17T12:15:17.727",
    "keywords": "remote,authentication"
  },
  "CVE-2024-27435": {
    "cvss": "-",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix reconnection fail due to reserved tag allocation\n\nWe found a issue on production environment while using NVMe over RDMA,\nadmin_q reconnect failed forever while remote target and network is ok.\nAfter dig into it, we found it may caused by a ABBA deadlock due to tag\nallocation. In my case, the tag was hold by a keep alive request\nwaiting inside admin_q, as we quiesced admin_q while reset ctrl, so the\nrequest maked as idle and will not process before reset success. As\nfabric_q shares tagset with admin_q, while reconnect remote target, we\nneed a tag for connect command, but the only one reserved tag was held\nby keep alive command which waiting inside admin_q. As a result, we\nfailed to reconnect admin_q forever. In order to fix this issue, I\nthink we should keep two reserved tags for admin queue.",
    "published": "2024-05-17T13:15:58.073",
    "keywords": "remote,command"
  },
  "CVE-2024-35833": {
    "cvss": "-",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: fsl-qdma: Fix a memory leak related to the queue command DMA\n\nThis dma_alloc_coherent() is undone neither in the remove function, nor in\nthe error handling path of fsl_qdma_probe().\n\nSwitch to the managed version to fix both issues.",
    "published": "2024-05-17T14:15:19.930",
    "keywords": "command,leak"
  },
  "CVE-2024-34997": {
    "url": "https://github.com/joblib/joblib/issues/1582",
    "cvss": "-",
    "description": "joblib v1.4.2 was discovered to contain a deserialization vulnerability via the component joblib.numpy_pickle::NumpyArrayWrapper().read_array().",
    "published": "2024-05-17T19:15:07.373"
  },
  "CVE-2024-23554": {
    "cvss": 5.7,
    "description": "Cross-Site Request Forgery (CSRF) on Session Token vulnerability that could potentially lead to Remote Code Execution (RCE). \n",
    "published": "2024-05-18T00:15:07.337",
    "keywords": "remote,execution"
  },
  "CVE-2024-4264": {
    "cvss": 9.8,
    "description": "A remote code execution (RCE) vulnerability exists in the berriai/litellm project due to improper control of the generation of code when using the `eval` function unsafely in the `litellm.get_secret()` method. Specifically, when the server utilizes Google KMS, untrusted data is passed to the `eval` function without any sanitization. Attackers can exploit this vulnerability by injecting malicious values into environment variables through the `/config/update` endpoint, which allows for the update of settings in `proxy_server_config.yaml`.",
    "published": "2024-05-18T00:15:07.777",
    "keywords": "remote,execution"
  },
  "CVE-2024-3810": {
    "cvss": 8.8,
    "description": "The Salient Shortcodes plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.5.3 via the 'icon' shortcode 'image' attribute. This makes it possible for authenticated attackers, with contributor-level and above permissions, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where php file type can be uploaded and included.",
    "published": "2024-05-18T06:15:06.440",
    "keywords": "execution,sensitive,bypass"
  },
  "CVE-2024-3812": {
    "cvss": 7.5,
    "description": "The Salient Core plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 2.0.7 via the 'nectar_icon' shortcode 'icon_linea' attribute. This makes it possible for authenticated attackers, with contributor-level and above permissions, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where php file type can be uploaded and included.",
    "published": "2024-05-18T06:15:08.000",
    "keywords": "execution,sensitive,bypass"
  },
  "CVE-2024-3658": {
    "cvss": 9.8,
    "description": "The Build App Online plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.0.21. This is due to missing authentication checking in the 'set_user_cart' function with the 'user_id' header value. This makes it possible for unauthenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the user id.",
    "published": "2024-05-18T10:15:07.053",
    "keywords": "unauthenticated,authentication,bypass"
  },
  "CVE-2024-36050": {
    "url": "https://github.com/nixos/ofborg/issues/68#issuecomment-2082789441",
    "cvss": "-",
    "description": "Nix through 2.22.1 mishandles certain usage of hash caches, which makes it easier for attackers to replace current source code with attacker-controlled source code by luring a maintainer into accepting a malicious pull request.",
    "published": "2024-05-18T22:15:07.460"
  },
  "CVE-2024-35871": {
    "cvss": "-",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: process: Fix kernel gp leakage\n\nchildregs represents the registers which are active for the new thread\nin user context. For a kernel thread, childregs->gp is never used since\nthe kernel gp is not touched by switch_to. For a user mode helper, the\ngp value can be observed in user space after execve or possibly by other\nmeans.\n\n[From the email thread]\n\nThe /* Kernel thread */ comment is somewhat inaccurate in that it is also used\nfor user_mode_helper threads, which exec a user process, e.g. /sbin/init or\nwhen /proc/sys/kernel/core_pattern is a pipe. Such threads do not have\nPF_KTHREAD set and are valid targets for ptrace etc. even before they exec.\n\nchildregs is the *user* context during syscall execution and it is observable\nfrom userspace in at least five ways:\n\n1. kernel_execve does not currently clear integer registers, so the starting\n   register state for PID 1 and other user processes started by the kernel has\n   sp = user stack, gp = kernel __global_pointer$, all other integer registers\n   zeroed by the memset in the patch comment.\n\n   This is a bug in its own right, but I'm unwilling to bet that it is the only\n   way to exploit the issue addressed by this patch.\n\n2. ptrace(PTRACE_GETREGSET): you can PTRACE_ATTACH to a user_mode_helper thread\n   before it execs, but ptrace requires SIGSTOP to be delivered which can only\n   happen at user/kernel boundaries.\n\n3. /proc/*/task/*/syscall: this is perfectly happy to read pt_regs for\n   user_mode_helpers before the exec completes, but gp is not one of the\n   registers it returns.\n\n4. PERF_SAMPLE_REGS_USER: LOCKDOWN_PERF normally prevents access to kernel\n   addresses via PERF_SAMPLE_REGS_INTR, but due to this bug kernel addresses\n   are also exposed via PERF_SAMPLE_REGS_USER which is permitted under\n   LOCKDOWN_PERF. I have not attempted to write exploit code.\n\n5. Much of the tracing infrastructure allows access to user registers. I have\n   not attempted to determine which forms of tracing allow access to user\n   registers without already allowing access to kernel registers.",
    "published": "2024-05-19T09:15:08.507",
    "keywords": "execution,leak"
  },
  "CVE-2024-35912": {
    "cvss": "-",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: rfi: fix potential response leaks\n\nIf the rx payload length check fails, or if kmemdup() fails,\nwe still need to free the command response. Fix that.",
    "published": "2024-05-19T09:15:11.770",
    "keywords": "command,leak"
  },
  "CVE-2024-35929": {
    "cvss": "-",
    "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrcu/nocb: Fix WARN_ON_ONCE() in the rcu_nocb_bypass_lock()\n\nFor the kernels built with CONFIG_RCU_NOCB_CPU_DEFAULT_ALL=y and\nCONFIG_RCU_LAZY=y, the following scenarios will trigger WARN_ON_ONCE()\nin the rcu_nocb_bypass_lock() and rcu_nocb_wait_contended() functions:\n\n        CPU2                                               CPU11\nkthread\nrcu_nocb_cb_kthread                                       ksys_write\nrcu_do_batch                                              vfs_write\nrcu_torture_timer_cb                                      proc_sys_write\n__kmem_cache_free                                         proc_sys_call_handler\nkmemleak_free                                             drop_caches_sysctl_handler\ndelete_object_full                                        drop_slab\n__delete_object                                           shrink_slab\nput_object                                                lazy_rcu_shrink_scan\ncall_rcu                                                  rcu_nocb_flush_bypass\n__call_rcu_commn                                            rcu_nocb_bypass_lock\n                                                            raw_spin_trylock(&rdp->nocb_bypass_lock) fail\n                                                            atomic_inc(&rdp->nocb_lock_contended);\nrcu_nocb_wait_contended                                     WARN_ON_ONCE(smp_processor_id() != rdp->cpu);\n WARN_ON_ONCE(atomic_read(&rdp->nocb_lock_contended))                                          |\n                            |_ _ _ _ _ _ _ _ _ _same rdp and rdp->cpu != 11_ _ _ _ _ _ _ _ _ __|\n\nReproduce this bug with \"echo 3 > /proc/sys/vm/drop_caches\".\n\nThis commit therefore uses rcu_nocb_try_flush_bypass() instead of\nrcu_nocb_flush_bypass() in lazy_rcu_shrink_scan().  If the nocb_bypass\nqueue is being flushed, then rcu_nocb_try_flush_bypass will return\ndirectly.",
    "published": "2024-05-19T11:15:48.993",
    "keywords": "bypass,leak"
  }
}